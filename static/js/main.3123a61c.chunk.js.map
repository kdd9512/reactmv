{"version":3,"sources":["assets/noImg.png","Components/Header.js","Components/Section.js","Components/Error.js","Components/Poster.js","Components/Loader.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["Header","styled","header","List","ul","Item","li","props","current","SLink","Link","withRouter","pathname","location","to","Container","div","Title","span","Grid","Section","title","children","Text","Error","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","require","default","role","aria-label","length","substring","HomePresenter","nowPlaying","upcoming","popular","loading","error","Loader","map","movie","poster_path","original_title","vote_average","release_date","api","axios","create","baseURL","params","moviesApi","get","append_to_response","term","query","encodeURIComponent","tvApi","HomeContainer","state","a","data","results","this","setState","console","log","React","Component","TVPresenter","topRated","onAirToday","show","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResult","tvResult","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","Backdrop","bgImage","Content","Cover","Data","IMDb","IMDbImg","img","ItemContainer","Divider","Synop","p","Box","Actor","Crew","Info","Portrait","StaffInfo","Etc","DetailPresenter","result","credits","backdrop_path","runtime","episode_runtime","genres","genre","index","name","imdb_id","href","src","defaultFocus","className","eventKey","overview","width","height","url","videos","key","cast","actor","profile_path","character","crew","job","DetailContainer","includes","match","push","history","parseID","parseInt","isNaN","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3123a61c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noImg.8a74e7dd.png\";","import React from \"react\";\r\nimport {Link, withRouter} from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\n\r\nconst Header = styled.header`\r\n    color: white;\r\n    position: fixed;\r\n    top:0;\r\n    left:0;\r\n    width:100%;\r\n    height:50px;\r\n    display:flex;\r\n    align-items:center;\r\n    padding: 0px, 10px;\r\n    background-color: rgba(20, 20, 20, 0.8);\r\n    z-index: 10;\r\n    box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst List = styled.ul`\r\n    display: flex;\r\n    `;\r\n\r\nconst Item = styled.li`\r\n    width:100px;\r\n    list-style: none;\r\n    text-align:center;\r\n    border-bottom: 3px solid \r\n    ${props => (props.current ? \"blue\" : \"transparent\")};\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n    height:50px;\r\n    display:flex;\r\n    align-items:center;\r\n    justify-content: center;\r\n`;\r\n\r\n\r\nexport default withRouter(\r\n    ({location: {pathname}}) => (\r\n        <Header>\r\n            <List>\r\n                <Item current={pathname === \"/\"}>\r\n                    <SLink to=\"/\">Movies</SLink>\r\n                </Item>\r\n                <Item current={pathname === \"/tv\"}>\r\n                    <SLink to=\"/tv\">TV</SLink>\r\n                </Item>\r\n                <Item current={pathname === \"/search\"}>\r\n                    <SLink to=\"/search\">Search</SLink>\r\n                </Item>\r\n            </List>\r\n        </Header>\r\n    ));","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n:not(:last-child) {\r\n        margin-bottom:60px;\r\n     }\r\n    `;\r\n\r\nconst Title = styled.span`\r\n        font-size:25px;\r\n        font-weight:bold;\r\n    `;\r\n\r\nconst Grid = styled.div`\r\n        margin-top: 25px;\r\n        display: grid;\r\n        grid-template-columns: repeat(auto-fill, 125px);\r\n        grid-gap: 25px;\r\n    `;\r\n\r\nconst Section = (\r\n    {\r\n        title,\r\n        children\r\n    }) => (\r\n    <Container>\r\n        <Title>{title}</Title>\r\n        <Grid>{children}</Grid>\r\n    </Container>\r\n);\r\n\r\nSection.propTypes = {\r\n    title:PropTypes.string.isRequired,\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node\r\n    ])\r\n};\r\n\r\nexport default Section;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    width:100vw;\r\n    display:flex;\r\n    justify-content:center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n    color: blue;\r\n    font-weight:bold;\r\n`;\r\n\r\nconst Error = ({text}) => (\r\n    <Container>\r\n        <Text>{text}</Text>\r\n    </Container>\r\n);\r\n\r\nError.propTypes = {\r\n    text: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Error;","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\n\r\nconst Container = styled.div`\r\n    font-size:15px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n    background-image: url(${props => props.bgUrl});\r\n    height:180px;\r\n    background-size:cover;\r\n    border-radius: 3px;\r\n    background-position: center center;\r\n    transition:opacity .2s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n    bottom: 5px;\r\n    right: 5px;\r\n    position: absolute;\r\n    font-size: 12px;\r\n    color: yellow;\r\n    font-weight: bold;\r\n    opacity: 0;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n    margin-bottom:5px;\r\n    position: relative;\r\n    &:hover {\r\n    ${Image}{\r\n        opacity 0.3\r\n        }\r\n        ${Rating} {\r\n        opacity: 1;\r\n        }\r\n    }\r\n`;\r\n\r\nconst Title = styled.span`\r\n    display:block;\r\n    font-size:15px;\r\n    margin: 3px 0px 3px;\r\n`;\r\n\r\nconst Year = styled.span`\r\n    font-size:13px;\r\n    color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\n\r\nconst Poster = ({id, imageUrl, title, rating, year, isMovie = false}) => (\r\n    <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\r\n        <Container>\r\n            <ImageContainer>\r\n                <Image bgUrl={imageUrl ?\r\n                    `https://image.tmdb.org/t/p/w500${imageUrl}`\r\n                    : require(\"../assets/noImg.png\").default\r\n                }/>\r\n                <Rating>\r\n                <span role=\"img\" aria-label=\"rating\">\r\n                    ⭐\r\n                </span>{\" \"}\r\n                    {rating} / 10\r\n                </Rating>\r\n            </ImageContainer>\r\n            <Title>\r\n                {title.length > 14 ? `${title.substring(0,15)}...` : title}\r\n                {\" \"}\r\n            </Title>\r\n            <Year>{year}</Year>\r\n        </Container>\r\n    </Link>\r\n);\r\n\r\nPoster.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    imageUrl: PropTypes.string,\r\n    title: PropTypes.string.isRequired,\r\n    rating: PropTypes.number,\r\n    year: PropTypes.string,\r\n    isMovie: PropTypes.bool\r\n};\r\n\r\nexport default Poster;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    height: 100vh;\r\n    width: 100vw;\r\n    display: flex;\r\n    justify-content:center;\r\n    font-size: 30px;\r\n    margin-top: 30px;\r\n`;\r\n\r\nexport default () =>\r\n    <Container>\r\n        <span role=\"img\" aria-label=\"loading\">\r\n            ⏰\r\n        </span>\r\n    </Container>","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Section from \"Components/Section\";\r\nimport Error from \"Components/Error\";\r\nimport Poster from \"Components/Poster\";\r\nimport {Helmet, HelmetProvider} from \"react-helmet-async\";\r\nimport Loader from \"Components/Loader\";\r\n\r\nconst Container = styled.div`\r\n        padding: 40px 20px;\r\n    `;\r\n\r\nconst HomePresenter = ({nowPlaying, upcoming, popular, loading, error}) => (\r\n    <HelmetProvider>\r\n        {loading ? (\r\n            <Loader/>\r\n        ) : (\r\n            <Container>\r\n                <Helmet>\r\n                    <title>Movies</title>\r\n                </Helmet>\r\n                {nowPlaying && nowPlaying.length > 0 && (\r\n                    <Section title=\"Now Playing\">\r\n                        {nowPlaying.map(movie =>\r\n                            <Poster\r\n                                id={movie.id}\r\n                                key={movie.id}\r\n                                imageUrl={movie.poster_path}\r\n                                title={movie.original_title}\r\n                                rating={movie.vote_average}\r\n                                year={movie.release_date\r\n                                    // .substring(0, 4)\r\n                                    }\r\n                                isMovie={true}\r\n                            />)}\r\n                    </Section>\r\n                )}\r\n                {upcoming && upcoming.length > 0 && (\r\n                    <Section title=\"Upcoming Movies\">\r\n                        {upcoming.map(movie =>\r\n                            <Poster\r\n                                id={movie.id}\r\n                                key={movie.id}\r\n                                imageUrl={movie.poster_path}\r\n                                title={movie.original_title}\r\n                                rating={movie.vote_average}\r\n                                year={movie.release_date\r\n                                    // .substring(0, 4)\r\n                                }\r\n                                isMovie={true}\r\n                            />)}\r\n                    </Section>\r\n                )}\r\n                {popular && popular.length > 0 && (\r\n                    <Section title=\"Popular Movies\">\r\n                        {popular.map(movie =>\r\n                            <Poster\r\n                                id={movie.id}\r\n                                key={movie.id}\r\n                                imageUrl={movie.poster_path}\r\n                                title={movie.original_title}\r\n                                rating={movie.vote_average}\r\n                                year={movie.release_date\r\n                                    // .substring(0,4)\r\n                                }\r\n                                isMovie={true}\r\n                            />)}\r\n                    </Section>\r\n                )}\r\n                {error && <Error text={error}/>}\r\n            </Container>\r\n        )}\r\n    </HelmetProvider>\r\n);\r\n\r\nHomePresenter.propTypes = {\r\n    nowPlaying: PropTypes.array,\r\n    upcoming: PropTypes.array,\r\n    popular: PropTypes.array,\r\n    loading: PropTypes.bool.isRequired,\r\n    error: PropTypes.string\r\n};\r\n\r\nexport default HomePresenter;","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3/\",\r\n    params: {\r\n        \"api_key\": \"b1426df157ad864ca8be1238e7928eab\",\r\n        \"language\": \"en-US\"\r\n    }\r\n});\r\n\r\nexport const moviesApi = {\r\n    nowPlaying: () => api.get(\"movie/now_playing\"),\r\n    upcoming: () => api.get(\"movie/upcoming\"),\r\n    popular: () => api.get(\"movie/popular\"),\r\n    creditDetail: (id) => api.get(`movie/${id}/credits`),\r\n    movieDetail: (id) => api.get(`movie/${id}`, {\r\n        params: {\r\n            append_to_response: \"videos\"\r\n        }\r\n    }),\r\n    search: (term) =>\r\n        api.get(\"search/movie\",{\r\n        params: {\r\n            query: encodeURIComponent(term)\r\n        }\r\n    })\r\n}\r\n\r\nexport const tvApi = {\r\n    topRated: () => api.get(\"tv/top_rated\"),\r\n    popular: () => api.get(\"tv/popular\"),\r\n    onAirToday: () => api.get(\"tv/airing_today\"),\r\n    creditDetail: (id) => api.get(`tv/${id}/credits`),\r\n    showDetail: (id) =>\r\n        api.get(`tv/${id}`, {\r\n        params: {\r\n            append_to_response: \"videos\"\r\n        }\r\n    }),\r\n    search: (term) =>\r\n        api.get(\"search/tv\",{\r\n            params: {\r\n                query: encodeURIComponent(term)\r\n            }\r\n        })\r\n}","import HomeContainer from \"./HomeContainer\";\r\n\r\nexport default HomeContainer;","import React from \"react\";\r\nimport HomePresenter from \"./HomePresenter\";\r\nimport {moviesApi} from \"api\";\r\nimport Error from \"Components/Error\";\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        nowPlaying: null,\r\n        upcoming: null,\r\n        popular: null,\r\n        error: null,\r\n        loading: true\r\n    };\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const {\r\n                data:{results: nowPlaying}\r\n            } = await moviesApi.nowPlaying();\r\n            const {\r\n                data:{results: upcoming}\r\n            } = await moviesApi.upcoming();\r\n            const {\r\n                data:{results: popular}\r\n            } = await moviesApi.popular();\r\n            this.setState({\r\n                nowPlaying,\r\n                upcoming,\r\n                popular\r\n            })\r\n        } catch {\r\n            this.setState({\r\n                error: \"Can't find information about Movie.\"\r\n            })\r\n        } finally {\r\n            this.setState({\r\n                loading: false\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {nowPlaying, upcoming, popular, error, loading} = this.state;\r\n        console.log(this.state.popular)\r\n        return (\r\n            <HomePresenter\r\n                nowPlaying={nowPlaying}\r\n                upcoming={upcoming}\r\n                popular={popular}\r\n                error={error}\r\n                loading={loading}\r\n            />\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Error from \"Components/Error\";\r\nimport Poster from \"Components/Poster\";\r\nimport {Helmet, HelmetProvider} from \"react-helmet-async\";\r\n\r\nconst Container = styled.div`\r\n        padding: 40px 20px;\r\n    `;\r\n\r\nconst TVPresenter = ({topRated, popular, onAirToday, loading, error}) => (\r\n    <HelmetProvider>\r\n        {loading ? (\r\n            <Loader/>\r\n        ) : (\r\n            <Container>\r\n                <Helmet>\r\n                    <title>Shows</title>\r\n                </Helmet>\r\n                {topRated && topRated.length > 0 && (\r\n                    <Section title=\"Top Rated Shows\">\r\n                        {topRated.map(show =>\r\n                            <Poster\r\n                                id={show.id}\r\n                                key={show.id}\r\n                                imageUrl={show.poster_path}\r\n                                title={show.original_name}\r\n                                rating={show.vote_average}\r\n                                year={show.first_air_date\r\n                                    // .substring(0, 4)\r\n                                }\r\n                                isMovie={false}\r\n                            />\r\n                        )}\r\n                    </Section>\r\n                )}\r\n                {popular && popular.length > 0 && (\r\n                    <Section title=\"Popular Shows\">\r\n                        {popular.map(show =>\r\n                            <Poster\r\n                                id={show.id}\r\n                                key={show.id}\r\n                                imageUrl={show.poster_path}\r\n                                title={show.original_name}\r\n                                rating={show.vote_average}\r\n                                year={show.first_air_date\r\n                                    // .substring(0, 4)\r\n                                }\r\n                                isMovie={false}\r\n                            />\r\n                        )}\r\n                    </Section>\r\n                )}\r\n                {onAirToday && onAirToday.length > 0 && (\r\n                    <Section title=\"On Air NOW\">\r\n                        {onAirToday.map(show =>\r\n                            <Poster\r\n                                id={show.id}\r\n                                key={show.id}\r\n                                imageUrl={show.poster_path}\r\n                                title={show.original_name}\r\n                                rating={show.vote_average}\r\n                                year={show.first_air_date\r\n                                    // .substring(0, 4)\r\n                                }\r\n                                isMovie={false}\r\n                            />\r\n                        )}\r\n                    </Section>\r\n                )}\r\n                {error && <Error text={error}/>}\r\n            </Container>\r\n        )}\r\n    </HelmetProvider>\r\n);\r\n\r\n\r\nTVPresenter.propTypes = {\r\n    topRated: PropTypes.array,\r\n    popular: PropTypes.array,\r\n    onAirToday: PropTypes.array,\r\n    loading: PropTypes.bool.isRequired,\r\n    error: PropTypes.string\r\n\r\n}\r\n\r\n\r\nexport default TVPresenter;","import TVContainer from \"./TVContainer\";\r\n\r\nexport default TVContainer;","import React from \"react\";\r\nimport TVPresenter from \"./TVPresenter\";\r\nimport {tvApi} from \"api\";\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        topRated: null,\r\n        popular: null,\r\n        onAirToday: null,\r\n        loading: true,\r\n        error: null\r\n\r\n    };\r\n\r\n    async componentDidMount(){\r\n        try {\r\n            const {\r\n                data:{results: topRated}\r\n            } = await tvApi.topRated();\r\n            const {\r\n                data:{results: popular}\r\n            } = await tvApi.popular();\r\n            const {\r\n                data:{results: onAirToday}\r\n            } = await tvApi.onAirToday();\r\n            this.setState({\r\n                topRated,\r\n                popular,\r\n                onAirToday\r\n            })\r\n        } catch {\r\n            this.setState({\r\n                error: \"Can't find information about TV.\"\r\n            })\r\n        } finally {\r\n            this.setState({\r\n                loading: false\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {topRated, popular, onAirToday, error, loading} = this.state;\r\n        console.log(this.state)\r\n        return (\r\n            <TVPresenter\r\n                topRated={topRated}\r\n                popular={popular}\r\n                onAirToday={onAirToday}\r\n                loading={loading}\r\n                error={error}\r\n            />\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"Components/Loader\";\r\nimport Section from \"Components/Section\";\r\nimport Error from \"Components/Error\";\r\nimport Poster from \"Components/Poster\";\r\nimport {Helmet, HelmetProvider} from \"react-helmet-async\";\r\n\r\nconst Container = styled.div`\r\n    padding: 40px 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n    margin-bottom: 50px;\r\n    width:100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n    all: unset;\r\n    font-size: 30px;\r\n    width:100%;\r\n`;\r\n\r\n\r\nconst SearchPresenter = (\r\n    {\r\n        movieResult,\r\n        tvResult,\r\n        loading,\r\n        error,\r\n        searchTerm,\r\n        handleSubmit,\r\n        updateTerm\r\n    }) => (\r\n    <HelmetProvider>\r\n        <Container>\r\n            <Form onSubmit={handleSubmit}>\r\n                <Input placeholder=\"Search Movies or TV Show\"\r\n                       value={searchTerm}\r\n                       onChange={updateTerm}/>\r\n            </Form>\r\n            {loading ? (\r\n                <Loader/>\r\n            ) : (\r\n                <>\r\n                    <Helmet>\r\n                        <title>Search</title>\r\n                    </Helmet>\r\n                    {movieResult && movieResult.length > 0 && (\r\n                        <Section title=\"Movie Results\">{\r\n                            movieResult.map(movie => (\r\n                                <Poster\r\n                                    id={movie.id}\r\n                                    key={movie.id}\r\n                                    imageUrl={movie.poster_path}\r\n                                    title={movie.original_title}\r\n                                    rating={movie.vote_average}\r\n                                    year={movie.release_date ?\r\n                                        movie.release_date.substring(0, 4) : \"NO DATA\"}\r\n                                    isMovie={true}\r\n                                />\r\n                            ))}\r\n                        </Section>\r\n                    )}\r\n                    {tvResult && tvResult.length > 0 && (\r\n                        <Section title=\"TV Results\">{\r\n                            tvResult.map(show => (\r\n                                <Poster\r\n                                    id={show.id}\r\n                                    key={show.id}\r\n                                    imageUrl={show.poster_path}\r\n                                    title={show.original_name}\r\n                                    rating={show.vote_average}\r\n                                    year={show.first_air_date ?\r\n                                        show.first_air_date.substring(0, 4) : \"NO DATA\"}\r\n                                    isMovie={false}\r\n                                />\r\n                            ))}\r\n                        </Section>\r\n                    )}\r\n                    {error && <Error text={error}/>}\r\n                    {tvResult && movieResult\r\n                    && tvResult.length === 0 && tvResult.length === 0\r\n                    && <Error text=\"NO RESULTS..\"/>}\r\n                </>\r\n            )}\r\n        </Container>\r\n    </HelmetProvider>\r\n);\r\n\r\nSearchPresenter.propTypes = {\r\n    movieResult: PropTypes.array,\r\n    tvResult: PropTypes.array,\r\n    loading: PropTypes.bool.isRequired,\r\n    error: PropTypes.string,\r\n    searchTerm: PropTypes.string,\r\n    handleSubmit: PropTypes.func.isRequired,\r\n    updateTerm: PropTypes.func.isRequired\r\n}\r\n\r\nexport default SearchPresenter;\r\n","import SearchContainer from \"./SearchContainer\";\r\n\r\nexport default SearchContainer;","import React from \"react\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\nimport {moviesApi, tvApi} from \"api\";\r\nimport Error from \"Components/Error\";\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        movieResult: null,\r\n        tvResult: null,\r\n        searchTerm: \"\",\r\n        loading: false,\r\n        error: null\r\n    };\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const {searchTerm} = this.state;\r\n        if (searchTerm !== \"\") {\r\n            this.searchByTerm();\r\n        }\r\n    }\r\n\r\n    updateTerm = (event) => {\r\n        const {target: {value}} = event;\r\n        this.setState(\r\n            {searchTerm: value}\r\n        );\r\n    }\r\n\r\n    searchByTerm = async () => {\r\n        const {searchTerm} = this.state;\r\n        this.setState({loading: true});\r\n        try {\r\n            const {\r\n                data: {results: movieResult}\r\n            } = await moviesApi.search(searchTerm);\r\n            const {\r\n                data: {results: tvResult}\r\n            } = await tvApi.search(searchTerm);\r\n\r\n            this.setState({\r\n                movieResult,\r\n                tvResult\r\n            });\r\n        } catch {\r\n            this.setState({error: \"Can't find results\"});\r\n        } finally {\r\n            this.setState({loading: false});\r\n        }\r\n    };\r\n\r\n\r\n    render() {\r\n        const {movieResult, tvResult, searchTerm, error, loading} = this.state;\r\n        return (\r\n            <SearchPresenter\r\n                movieResult={movieResult}\r\n                tvResult={tvResult}\r\n                error={error}\r\n                loading={loading}\r\n                searchTerm={searchTerm}\r\n                handleSubmit={this.handleSubmit}\r\n                updateTerm={this.updateTerm}\r\n            />\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"Components/Loader\";\r\nimport ReactPlayer from \"react-player\";\r\nimport {Helmet, HelmetProvider} from \"react-helmet-async\";\r\nimport {Tab, TabList, TabPanel, Tabs} from \"react-tabs\";\r\nimport \"CSS/TabStyle.css\";\r\n\r\nconst settings = {\r\n    dots: true,\r\n    speed: 500,\r\n    arrows: true,\r\n    autoplay: false,\r\n    slidesToShow: 5,\r\n    slidesToScroll: 5\r\n}\r\n\r\nconst Container = styled.div`\r\n    height: calc(100vh - 50px);\r\n    width: 100%;\r\n    position: relative;\r\n    padding: 50px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-image: url(${props => props.bgImage});\r\n    background-position: center center;\r\n    background-size: cover;\r\n    filter : blur(5px);\r\n    opacity: 0.5;\r\n    z-index: 0;\r\n`;\r\n\r\nconst Content = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    height: 100%;\r\n    position: relative;\r\n    z-index: 1;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n    width: 30%;\r\n    background-image: url(${props => props.bgImage});\r\n    background-position: center center;\r\n    background-size: cover;\r\n    height:100%;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n    width: 70%;\r\n    margin-left: 20px;\r\n`;\r\n\r\nconst Title = styled.span`\r\n    font-size: 35px;\r\n`;\r\n\r\nconst Item = styled.span`\r\n    line-height: 2.0;\r\n`;\r\n\r\nconst IMDb = styled.a`\r\n    line-height: 1.5;\r\n`;\r\n\r\nconst IMDbImg = styled.img`\r\n    margin-bottom: -5px;\r\n    width: 40px;\r\n    height: 20px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n    margin-top: 10px;\r\n`;\r\n\r\nconst Divider = styled.span`\r\n    margin: 0 10px;\r\n`;\r\n\r\nconst Synop = styled.p`\r\n    margin : 10px 0px 0px 40px;\r\n    font-size : 13px;\r\n    opacity: 0.6;\r\n    line-height: 2;\r\n    width: 70%;\r\n    text-align: center;\r\n`;\r\n\r\nconst Box = styled.div`\r\n    float:left;\r\n    clear:both;\r\n    display:flex;\r\n`;\r\n\r\nconst Actor = styled.div`\r\n`;\r\n\r\nconst Crew = styled.div`\r\n`;\r\n\r\nconst Info = styled.a`\r\n  float: left;\r\n  margin:0px 15px 20px 15px;\r\n  height:min-content;\r\n  width:min-content;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Portrait = styled.img`\r\n    clear:both;\r\n    height:180px;\r\n    width:140px;\r\n    border-radius: 4px;\r\n    position: flex;\r\n`;\r\n\r\nconst StaffInfo = styled.p`\r\n    clear:both;\r\n    color:antiquewhite;\r\n    font-size:15px;\r\n`;\r\nconst Etc = styled.span`\r\n  margin: 10px 0px 30px 10px;\r\n  float: left;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width:max-content;\r\n  height:max-content;\r\n`;\r\n\r\n\r\nconst DetailPresenter = ({result, credits, error, loading}) => (\r\n    loading ? (\r\n        <HelmetProvider>\r\n            <Helmet>\r\n                <title>Loading...</title>\r\n            </Helmet>\r\n            <Loader/>\r\n        </HelmetProvider>\r\n    ) : (\r\n        <HelmetProvider>\r\n            <Container>\r\n                <Helmet>\r\n                    <title>{result.original_title\r\n                        ? `${result.original_title}`\r\n                        : result.original_name}\r\n                    </title>\r\n                </Helmet>\r\n                <Backdrop\r\n                    bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\r\n                />\r\n                <Content>\r\n                    <Cover\r\n                        bgImage={result.poster_path ?\r\n                            `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n                            : require(\"assets/noImg.png\").default}\r\n                    />\r\n                    <Data>\r\n                        <Title>{result.original_title\r\n                            ? result.original_title\r\n                            : result.original_name}\r\n                        </Title>\r\n                        <ItemContainer>\r\n                            <Item>{result.release_date\r\n                                ? result.release_date.substring(0, 4)\r\n                                : result.first_air_date.substring(0, 4)}\r\n                            </Item>\r\n                            <Divider>・</Divider>\r\n                            <Item>{result.runtime\r\n                                ? `${result.runtime} min`\r\n                                : `${result.episode_runtime} min`}\r\n                            </Item>\r\n                            <Divider>・</Divider>\r\n                            <Item>{result.genres\r\n                            && result.genres.map((genre, index) =>\r\n                                index === result.genres.length - 1\r\n                                    ? genre.name\r\n                                    : `${genre.name} / `\r\n                            )}\r\n                            </Item>\r\n                            <Divider>{\"\"}</Divider>\r\n                            {result.imdb_id ? (\r\n                                    <IMDb href={`https://www.imdb.com/title/${result.imdb_id}`} target={\"_blank\"}>\r\n                                        <IMDbImg\r\n                                            src={\"https://upload.wikimedia.org/wikipedia/commons/thumb/6/69/IMDB_Logo_2016.svg/220px-IMDB_Logo_2016.svg.png\"}/>\r\n                                    </IMDb>\r\n                                )\r\n                                : null}\r\n                        </ItemContainer>\r\n                        <>\r\n                            <Tabs defaultFocus={0} className=\"tabContainer\">\r\n                                <TabList className=\"tabList\">\r\n                                    <Tab className=\"tabMenu\" eventKey={0}>synopsis</Tab>\r\n                                    <Tab className=\"tabMenu\" eventKey={1}>trailer</Tab>\r\n                                    <Tab className=\"tabMenu\" eventKey={2}>staff</Tab>\r\n                                </TabList>\r\n                                <TabPanel className=\"tabContent\" eventKey={0}>\r\n                                    <Synop>{result.overview}</Synop>\r\n                                </TabPanel>\r\n                                <TabPanel className=\"tabContent\" eventKey={1}>\r\n                                    <ReactPlayer\r\n                                        width=\"730px\"\r\n                                        height=\"460px\"\r\n                                        url={`https://www.youtube.com/watch?v=${result.videos.results[0].key}`}/>\r\n                                </TabPanel>\r\n                                <TabPanel className=\"tabContent\" eventKey={2}>\r\n                                    <Box>\r\n                                        <Actor>\r\n                                            {credits.cast && credits.cast.length > 0\r\n                                                ? credits.cast.map((actor, index) =>\r\n                                                    index < 4 ? (\r\n                                                        <Info>\r\n                                                            <Portrait\r\n                                                                src={actor.profile_path ?\r\n                                                                    `https://image.tmdb.org/t/p/original/${actor.profile_path}`\r\n                                                                    : require(\"assets/noImg.png\").default}\r\n                                                            />\r\n                                                            <StaffInfo>\r\n                                                                {actor.original_name}\r\n                                                            </StaffInfo>\r\n                                                            <StaffInfo>\r\n                                                                {`Star as ${actor.character}`}\r\n                                                            </StaffInfo>\r\n                                                        </Info>\r\n                                                    ) : null\r\n                                                )\r\n                                                : \"Not found information\"}\r\n                                            {credits.cast.length > 4 ? (\r\n                                                <Etc>\r\n                                                    + {credits.cast.length - 4} Actors...\r\n                                                </Etc>\r\n                                            ) : null}\r\n                                        </Actor>\r\n\r\n                                    </Box>\r\n                                    <Box>\r\n                                        <Crew>\r\n                                            {credits.crew && credits.crew.length > 0\r\n                                                ? credits.crew.map((crew, index) =>\r\n                                                    index < 4 ? (\r\n                                                        <Info>\r\n                                                            <Portrait\r\n                                                                src={crew.profile_path ?\r\n                                                                    `https://image.tmdb.org/t/p/original/${crew.profile_path}`\r\n                                                                    : require(\"assets/noImg.png\").default}\r\n                                                            />\r\n                                                            <StaffInfo>\r\n                                                                {crew.original_name}\r\n                                                            </StaffInfo>\r\n                                                            <StaffInfo>\r\n                                                                {`Role as ${crew.job}`}\r\n                                                            </StaffInfo>\r\n                                                        </Info>\r\n                                                    ) : null\r\n                                                )\r\n                                                : \"Not found information\"}\r\n                                            {credits.crew.length > 4 ? (\r\n                                                <Etc>\r\n                                                    + {credits.crew.length - 4} Crews...\r\n                                                </Etc>\r\n                                            ) : null}\r\n                                        </Crew>\r\n\r\n                                    </Box>\r\n                                </TabPanel>\r\n                            </Tabs>\r\n                        </>\r\n                    </Data>\r\n                </Content>\r\n            </Container>\r\n        </HelmetProvider>\r\n    )\r\n);\r\n\r\n\r\nDetailPresenter.propTypes = {\r\n    result: PropTypes.object,\r\n    loading: PropTypes.bool.isRequired,\r\n    error: PropTypes.string\r\n}\r\n\r\nexport default DetailPresenter;\r\n","import DetailContainer from \"./DetailContainer\";\r\n\r\nexport default DetailContainer;","import React from \"react\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\nimport {moviesApi} from \"api\";\r\nimport {tvApi} from \"api\";\r\n\r\nexport default class extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const {\r\n            location: {pathname}\r\n        } = props;\r\n        this.state = {\r\n            result: null,\r\n            loading: true,\r\n            error: null,\r\n            isMovie: pathname.includes(\"/movie/\")\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const {\r\n            match: {\r\n                params: {id}\r\n            },\r\n            history: {push}\r\n        } = this.props;\r\n        const {isMovie} = this.state;\r\n        const parseID = parseInt(id)\r\n        if (isNaN(parseID)) {\r\n            return push(\"/\");\r\n        }\r\n        let result = null;\r\n        let credits = null;\r\n\r\n        try {\r\n            if (isMovie) {\r\n                ({\r\n                    data: result\r\n                } = await moviesApi.movieDetail(parseID))\r\n                ({\r\n                    data: credits\r\n                } = await moviesApi.creditDetail(parseID));\r\n            } else {\r\n                ({\r\n                    data: result\r\n                } = await tvApi.showDetail(parseID))\r\n                ({\r\n                    data: credits\r\n                } = await tvApi.creditDetail(parseID));\r\n            }\r\n\r\n        } catch {\r\n            this.setState({error: \"Can't find anything...\"})\r\n        } finally {\r\n            this.setState({loading: false, result, credits})\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        const {result, credits, error, loading} = this.state;\r\n        console.log(credits)\r\n        return (\r\n            <DetailPresenter\r\n                result={result}\r\n                credits={credits}\r\n                error={error}\r\n                loading={loading}\r\n            />\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {BrowserRouter as Router, Route, Redirect, Switch} from \"react-router-dom\";\r\n\r\nimport Header from \"Components/Header\";\r\nimport Home from \"Routes/Home\";\r\nimport TV from \"Routes/TV\";\r\nimport Search from \"Routes/Search\";\r\nimport Detail from \"Routes/Detail\";\r\n\r\nexport default () => (\r\n    <Router>\r\n        <>\r\n            <Header/>\r\n            <Switch>\r\n                <Route path=\"/\" exact component={Home}/>\r\n                <Route path=\"/tv\" exact component={TV}/>\r\n                <Route path=\"/search\" exact component={Search}/>\r\n                <Route path=\"/movie/:id\" component={Detail}/>\r\n                <Route path=\"/show/:id\" component={Detail}/>\r\n                <Redirect from=\"*\" to=\"/\"/>\r\n            </Switch>\r\n        </>\r\n    </Router>\r\n)\r\n","import {createGlobalStyle} from \"styled-components\";\r\nimport reset from \"styled-reset\"\r\n\r\nconst globalStyles = createGlobalStyle`\r\n    ${reset};\r\n    a{\r\n        text-decoration:none;\r\n        color:inherit;\r\n    }\r\n    *{\r\n        box-sizing:border-box;\r\n    }\r\n    body {\r\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Canta\r\n        font-size: 14px;\r\n        background-color:rgba(20,20,20,1);\r\n        color:white;\r\n        padding-top: 40px;\r\n    }\r\n`;\r\n\r\nexport default globalStyles;","import React, {Component} from \"react\";\r\nimport Router from \"Components/Router\";\r\nimport GlobalStyles from \"Components/GlobalStyles\"\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <Router/>\r\n                <GlobalStyles/>\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from 'Components/App';\r\n\r\n\r\nReactDOM.render ( <App />, document.getElementById('root'));\r\n"],"sourceRoot":""}